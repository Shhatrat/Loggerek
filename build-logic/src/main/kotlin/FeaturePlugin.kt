import com.android.build.gradle.LibraryExtensionimport org.gradle.api.Pluginimport org.gradle.api.Projectimport org.gradle.kotlin.dsl.getByTypeimport org.jetbrains.kotlin.gradle.dsl.KotlinMultiplatformExtensionclass FeaturePlugin : Plugin<Project> {    override fun apply(project: Project) {        project.pluginManager.apply("android-config-plugin")        project.pluginManager.apply("loggerek-plugin")        project.pluginManager.apply("compose-plugin")        project.afterEvaluate {            project.extensions.getByType<KotlinMultiplatformExtension>().apply {                sourceSets.getByName("commonMain").dependencies {                    implementation(project(":base"))                    implementation(project(":base:color"))                    implementation(project(":base:testing"))                    implementation(project(":base:browser"))                    implementation(project.lib("material3.window.size.class1"))                    implementation(project.lib("compose.ui.test"))                }                sourceSets.getByName("commonTest").dependencies {                    implementation(kotlin("test"))                    implementation(project.lib("kotlinx.coroutines.test"))                    implementation(project.lib("compose.ui.test"))                }                sourceSets.getByName("androidUnitTest") {                    dependsOn(sourceSets.getByName("mobileTest"))                    dependsOn(sourceSets.getByName("commonTest"))                    dependencies {                        implementation(project.lib("ui.test.manifest"))                        implementation(project.lib("androidx.ui.test.junit4.android"))                        implementation(project.lib("robolectric"))                        implementation(project.lib("roborazziCompose"))                        implementation(project.lib("roborazziRule"))                        implementation(project.lib("roborazzi"))                    }                }                sourceSets.getByName("iosTest").dependencies {                    implementation(project.lib("roborazzi.compose.ios"))                }                sourceSets.getByName("jvmMain").dependencies {                    implementation(project.lib("kotlinx.coroutines.swing")) // for preview                }                sourceSets.getByName("jvmTest").dependencies {                    implementation(lib("roborazzi.compose.desktop"))                    implementation(kotlin("test"))                    implementation(project.lib("roborazzi"))                    implementation(project.lib("roborazziRule"))                    implementation(project.lib("roborazziCompose"))                }                sourceSets.getByName("androidInstrumentedTest"){                    dependsOn(sourceSets.getByName("commonTest"))                    dependencies {                        implementation(project.lib("ui.test.manifest"))                        implementation(project.lib("roborazzi"))                        implementation(project.lib("roborazziRule"))                        implementation(project.lib("roborazziCompose"))                    }                }            }        }        project.pluginManager.withPlugin("com.android.library") {            with(project.extensions.getByType<LibraryExtension>()) {                testOptions {                    unitTests {                        isIncludeAndroidResources = true                    }                }                defaultConfig {                    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"                }            }        }    }}